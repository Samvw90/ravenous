{"version":3,"sources":["components/SearchBar/SearchBar.js","components/business/Business.js","components/BusinessList/BusinessList.js","components/App/App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","state","term","location","sortBy","sortByOptions","handleTermChange","bind","handleLocationChange","handleSearch","sortByOption","this","setState","event","target","value","searchYelp","preventDefault","Object","keys","map","sortByOptionValue","key","className","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","React","Component","Business","business","src","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","BusinessList","businesses","App","console","log","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uUAoFeA,G,wDA5EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,SAAU,GACVC,OAAQ,cAEZ,EAAKC,cAAgB,CACjB,aAAa,aACb,gBAAgB,SAChB,gBAAgB,gBAEpB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAdL,E,2DAiBJG,GACX,OAAGC,KAAKV,MAAMG,SAAWM,EACd,SAEA,K,yCAIIA,GACfC,KAAKC,SAAS,CACVR,OAAQM,M,uCAICG,GACbF,KAAKC,SAAS,CACVV,KAAMW,EAAMC,OAAOC,U,2CAINF,GACjBF,KAAKC,SAAS,CACVT,SAAUU,EAAMC,OAAOC,U,mCAIlBF,GACTF,KAAKX,MAAMgB,WAAWL,KAAKV,MAAMC,KAAMS,KAAKV,MAAME,SAAUQ,KAAKV,MAAMG,QACvES,EAAMI,mB,4CAGa,IAAD,OAClB,OAAOC,OAAOC,KAAKR,KAAKN,eAAee,KAAI,SAAAV,GACvC,IAAMW,EAAoB,EAAKhB,cAAcK,GAC7C,OAAO,wBAAIY,IAAKD,EAAmBE,UAAW,EAAKC,eAAeH,GAAoBI,QAAS,EAAKC,mBAAmBnB,KAAK,EAAMc,IAAqBX,Q,+BAK3J,OACI,yBAAKa,UAAU,aACX,yBAAKA,UAAU,0BACX,4BACCZ,KAAKgB,wBAGV,yBAAKJ,UAAU,oBACX,2BAAOK,YAAY,oBAAoBC,SAAUlB,KAAKL,mBACtD,2BAAOsB,YAAY,SAASC,SAAUlB,KAAKH,wBAE/C,yBAAKe,UAAU,oBACX,uBAAGE,QAASd,KAAKF,cAAjB,kB,GAtEIqB,IAAMC,YCyBfC,G,mLAzBD,IACEC,EAAatB,KAAKX,MAAlBiC,SACR,OACI,yBAAKV,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKW,IAAKD,EAASE,SAAUC,IAAI,MAErC,4BAAKH,EAASI,MACd,yBAAKd,UAAU,wBACX,yBAAKA,UAAU,oBACX,2BAAIU,EAASK,SACb,2BAAIL,EAASM,MACb,2BAAIN,EAAShC,MAAb,IAAqBgC,EAASO,UAElC,yBAAKjB,UAAU,oBACX,4BAAKU,EAASQ,UACd,wBAAIlB,UAAU,UAAUU,EAASS,QACjC,2BAAIT,EAASU,oB,GAlBdb,IAAMC,YCcda,E,uKAbP,OACI,yBAAKrB,UAAU,gBAEPZ,KAAKX,MAAM6C,WAAWzB,KAAI,SAACa,GACvB,OAAO,kBAAC,EAAD,CAAUA,SAAUA,Y,GANxBH,IAAMC,WCE3BE,EAAW,CACfE,SAAU,gFACVE,KAAM,sBACNC,QAAS,sBACTC,KAAM,aACNtC,MAAO,KACPuC,QAAS,QACTC,SAAU,UACVC,OAAQ,IACRC,YAAa,IAGTE,EAAa,CACjBZ,EACAA,EACAA,EACAA,EACAA,EACAA,GAoBaa,E,yKAfF5C,EAAMC,EAAUC,GACzB2C,QAAQC,IAAR,gCAAqC9C,EAArC,eAAgDC,EAAhD,4BAA4EC,EAA5E,Q,+BAIF,OACI,yBAAKmB,UAAU,OACb,wCACA,kBAAC,EAAD,CAAWP,WAAYL,KAAKK,aAC5B,kBAAC,EAAD,CAAc6B,WAAYA,S,GAXhBf,IAAMC,WCfJkB,QACW,cAA7BC,OAAO/C,SAASgD,UAEe,UAA7BD,OAAO/C,SAASgD,UAEhBD,OAAO/C,SAASgD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlB,QAAQkB,MAAMA,EAAMC,c","file":"static/js/main.5700d170.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'\r\n        };\r\n        this.sortByOptions = {\r\n            'Best Match':'best_match',\r\n            'Highest rated':'rating',\r\n            'Most Reviewed':'review_count'\r\n        };\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    getSortByClass(sortByOption) {\r\n        if(this.state.sortBy === sortByOption) {\r\n            return 'active';\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({\r\n            sortBy: sortByOption\r\n        });\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({\r\n            term: event.target.value\r\n        });\r\n    }\r\n\r\n    handleLocationChange(event) {\r\n        this.setState({\r\n            location: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            const sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return <li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                    {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\r\n                    <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Let's Go</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        const { business } = this.props;\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={business.imageSrc} alt=''/>\r\n                </div>\r\n                <h2>{business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{business.address}</p>\r\n                        <p>{business.city}</p>\r\n                        <p>{business.state} {business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{business.category}</h3>\r\n                        <h3 className=\"rating\">{business.rating}</h3>\r\n                        <p>{business.reviewCount}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map((business)=> {\r\n                        return <Business business={business} />;\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default BusinessList;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\n// import '../BusinessList/BusinessList';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport BusinessList from '../BusinessList/BusinessList';\r\n\r\nconst business = {\r\n  imageSrc: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\r\n  name: 'MarginOtto Pizzeria',\r\n  address: '1010 Paddington Way',\r\n  city: 'Flavortown',\r\n  state: 'NY',\r\n  zipCode: '10101',\r\n  category: 'Italian',\r\n  rating: 4.5,\r\n  reviewCount: 90\r\n};\r\n\r\nconst businesses = [\r\n  business,\r\n  business,\r\n  business,\r\n  business,\r\n  business,\r\n  business\r\n];\r\n\r\nclass App extends React.Component {\r\n\r\n  searchYelp(term, location, sortBy) {\r\n    console.log(`You are searching for ${term} in ${location} area, sorted by ${sortBy}.`);\r\n  }\r\n\r\n  render() {\r\n  return (\r\n      <div className=\"App\">\r\n        <h1>ravenous</h1>\r\n        <SearchBar searchYelp={this.searchYelp} />\r\n        <BusinessList businesses={businesses} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}